apiVersion: v1
kind: Template
metadata:
  name: redmine
  annotations:
    openshift.io/display-name: "Darkmine application (Persistent) with PostgreSQL database"
    description: "Darkmine application template"
    tags: "darkmine"
objects:
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${DC_NAME}db-pvc
    labels:
      app: darkmine
      role: database
      type: postgresql
  spec:
    storageClassName: ${STORAGE_CLASS}
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${DB_SIZE}Gi
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${DC_NAME}-pvc-plugin
    labels:
      app: darkmine
  spec:
    storageClassName: ${STORAGE_CLASS}
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 400Mi
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: postgresql
    name: ${DC_NAME}db
  spec:
    volumes:
    - name: darkminedb-volume
      persistentVolumeClaim:
        claimName: ${DC_NAME}db-pvc
    replicas: 1
    selector:
      app: postgresql
      deploymentconfig: ${DC_NAME}db
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: postgresql
          deploymentconfig: ${DC_NAME}db
      spec:
        containers:
        - name: postgresql
          env:
          - name: POSTGRESQL_DATABASE
            value: ${DB_NAME}
          - name: POSTGRESQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: POSTGRESQL_USER
            value: ${DB_USER}
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: darkminedb-volume
        volumes:
        - name: darkminedb-volume
          persistentVolumeClaim:
            claimName: ${DC_NAME}db-pvc
        dnsPolicy: ClusterFirst
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: postgresql
    name: ${DC_NAME}db
  spec:
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: ${DC_NAME}db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: darkmine
    name: ${DC_NAME}
  spec:
    volumes:
    - name: darkmineplugin-volume
      persistentVolumeClaim:
        claimName: ${DC_NAME}-pvc-plugin
    replicas: 1
    selector:
      deploymentconfig: ${DC_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: ${DC_NAME}
      spec:
        restartPolicy: Always
        containers:
        - image: gmh501/darkmine
          imagePullPolicy: Always
          name: darkmine
          env:
          - name: REDMINE_DB_POSTGRES
            value: ${DC_NAME}db
          - name: REDMINE_DB_DATABASE
            value: ${DB_NAME}
          - name: REDMINE_DB_USERNAME
            value: ${DB_USER}
          - name: REDMINE_DB_PASSWORD
            value: ${DB_PASSWORD}
          ports:
          - containerPort: 3000
            protocol: TCP
          volumeMounts:
          - mountPath: /usr/src/redmine/plugins
            name: darkmineplugin-volume
        serviceAccountName: darkmine
        volumes:
        - name: darkmineplugin-volume
          persistentVolumeClaim:
            claimName: ${DC_NAME}-pvc-plugin
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: darkmine
    name: ${DC_NAME}
  spec:
    ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deploymentconfig: ${DC_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: darkmine
    name: ${DC_NAME}
  spec:
    path: /
    port:
      targetPort: 3000
    to:
      kind: Service
      name: ${DC_NAME}
parameters:
- name: DB_SIZE
  description: PostgreSQL volume size
  from: '[0-9]+'
  generate: expression
- name: DC_NAME
  description: Redmine DeploymentConfig name
  from: '[0-9a-zA-Z_]*'
  generate: expression
- name: DB_NAME
  description: PostgreSQL Database name
  from: '[0-9a-zA-Z_]*'
  generate: expression
- name: DB_USER
  description: PostgreSQL Database username
  from: '[0-9a-zA-Z_]*'
  generate: expression
- name: DB_PASSWORD
  description: PostgreSQL Database password
  from: '[0-9a-zA-Z]*'
  generate: expression
- name: STORAGE_CLASS
  description: StorageClass used to provide PersistentVolume storage
  from: '[0-9a-zA-Z]*'
  generate: expression

